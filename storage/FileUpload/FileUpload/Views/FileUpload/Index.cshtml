
@model List<FileUpload.EDMX.UploadedFile>
@{
    ViewBag.Title = "FileUpload";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>File Upload</h2>
<div><br /></div>

<div>
    @Html.TextBox("file", "", new { type = "file" })
    <br />
    <input type="submit" value="Submit" id="submit" />
    @ViewBag.Message
</div>

<div>
    <br />
    <hr />
</div>

<div>
    <h2>Uploaded files</h2>
    <table class="table table-bordered" id="tableUploadedFiles">

        <thead>
            <tr>
                <th>File Name</th>
                <th>Created By</th>
                <th>Created Date</th>
                <th class="center">Generate Link</th>
                <th class="center">View</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.OrderByDescending(x => x.ID))
            {
                <tr>
                    <td>@item.FileName</td>
                    <td>@item.CreatedBy</td>
                    <td>@item.CreateDate</td>
                    <td class="center">
                        <a class="clsGenerateLink action-btn" data-id="@item.ID" title="Generate Link">
                            <img src="@Url.Content("~/Images/link.png")" />
                        </a>
                    </td>
                    <td class="center">
                        <a href="javascript:void(0)" onclick="getDownloadLinks(@item.ID,'@item.FileName')" title="View Links">
                            <img src="@Url.Content("~/Images/view.png")" alt="view" />
                        </a>
                    </td>
                </tr>
            }
        </tbody>

    </table>

</div>

<div id="loader" style="display:none">
    <img src="@Url.Content("~/Images/loading.gif")" alt="Loader" class="dataloading" />
</div>

<div id="divCopy">
</div>

<div id="divLinkList">
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<script type="text/javascript">
    var fullUrl = "sasd";

    $(document).ready(function () {
         
        var file = '';
        var startChecksum = '';
        var endChecksum = '';
        var bytesPerChunk = '';
        var directoryname = "@Guid.NewGuid().ToString()";

        $('#copyModal').hide();

         //Generate Download Link
        $('.clsGenerateLink').click(function () {
            var buttonClicked = $(this);
            var id = buttonClicked.attr('data-id');
            GenerateLink(id);
        });

        $('#tableUploadedFiles').dataTable({
            ordering: false,
            searching: false,
            bLengthChange: false
        });

         //Get Details from webConfig
         GetWebConfigData();

        $('#submit').click(function () {
            $('#loader').css({ 'display': 'block' });
            debugger;
            file = $('#file')[0].files;
            var uploadworker = new Worker(window.location.href + "/Scripts/workeruploadchunk.js");

            uploadworker.onmessage = function (e) {
                var data = e.data;
            }
            uploadworker.onerror = function (e) {
                console.log("Something went wrong in workerupload");
            }

            var mergeworker = new Worker(window.location.href +"/Scripts/workermergeall.js");

            mergeworker.onmessage = function (e) {
                var data = e.data;
                switch (data.type) {
                    case 'checksum':
                        $('#loader').css({ 'display': 'none' });
                        endChecksum = data.message;
                        if (startChecksum.toString() === endChecksum.toString()) {
                            alert("File uploaded successfully");

                            var fileName = file[0].name;

                            var data = JSON.stringify({
                                'fileName': fileName,
                                'guId': directoryname
                            });

                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("SaveFileData", "FileUpload")',
                                contentType: "application/json; charset=utf-8",
                                data: data,
                                dataType: "json",
                                success: function () {
                                    console.log("success");
                                    location.reload();
                                },
                                error: function () {
                                    location.reload();
                                }
                            });
                        }
                        else {
                            alert("Oops! Something went wrong while uploading file");
                        }
                        break;
                }
            }
            mergeworker.onerror = function (e) {
                $('#loader').css({ 'display': 'none' });
                console.log("Something went wrong in workermergeall");
            }

            var worker = new Worker(window.location.href +"/Scripts/workerprocessfile.js");
            worker.onmessage = function (e) {
                var data = e.data;
                switch (data.type) {
                    case 'upload':
                        uploadworker.postMessage({ 'chunk': data.blob, 'filename': data.filename, 'directory': directoryname, 'chunkCount': data.chunkCount, 'id': data.id })
                        break;
                    case 'checksum':
                        startChecksum = data.message;
                        break;
                    case 'merge':
                        mergeworker.postMessage({ 'filename': data.filename, 'directory': directoryname, 'chunkCount': data.chunkCount, 'id': data.id })
                        break;
                }
            }
            worker.onerror = function (e) {
                worker.terminate();
                console.log("Something went wrong in workerprocess");
            }

            // Start the file upload by sending a postMessage to the file processing web worker
            worker.postMessage({ 'cmd': 'start', 'files': file, 'directory': directoryname, 'bytesperchunk': bytesPerChunk, 'id': 1 });
        });
    })

    function GetWebConfigData() {

        $.ajax({
            url: window.location.href +"/api/Helper/GetWebConfigData",
            type: 'GET',
            success: function (result) {
                bytesPerChunk = result;
            },
            error: function (result) {
                console.log(result);
            }
        });

    }

    function GenerateLink(id) {

         $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: '@Url.Action("GenerateLink","FileUpload")',
                data: '{Id: "' + id + '" }',
                datatype: "html",
                success: function (response) {
                    $('#divCopy').html(response);
                    $('#copyModal').modal('show');
                },
                error: function () {
                    alert("Something went wrong.");
                }
            });
    }

    function getDownloadLinks(id,fileName) {

        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetFileLinks", "FileUpload")',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({ id: id, fileName: fileName }),
            dataType: 'html',
            success: function (data) {
                $('#divLinkList').html(data);
                $('#linkListModal').modal('show');
            },
            error: function () {
                alert("Something went wrong.");
            }
        });
    }

    function showMore(e) {
       var a= $(this).closest("p").find("#p1").val()
        alert(a);
    }

</script>
@*<script src="http://localhost/Scripts/test.js"></script>*@